pico-8 cartridge // http://www.pico-8.com
version 36
__lua__

--init

screen_size = {x=128,y=128}
half_screen = {x=flr(screen_size.x/2),y=flr(screen_size.y/2)}

objs={}
player = {}

populated_rooms={}

transition="none"
collision_checks=0
draw_calls=0

wall_thickness=1

function _init()
  
  --initialize inherited objects
  init_player()
  init_door()
  init_staticbody()
  init_kinebody()

  --spawn objects
  create_kinebody(50,50,4,6,0,0)
  create_kinebody(50,70,4,6,0,0)

  spawn_doors(0,0)
  
  --run init functions
  for obj in all(objs) do
    obj:init()
  end
end
-->8

--------------------------------

--update
room_x = 0 room_y = 0
cam_x = 0 cam_y = 0
rs = 128

function _update60()
  --reset debug counts
  collision_checks=0
  draw_calls=0

  --camera
  update_camera(cam_x,cam_y,room_x*rs,room_y*rs)
  
  --objects
  player:update()
  for obj in all(objs) do
    obj:update()
  end
  
 --area trigger handler
  p_coll=get_player_collisions()
  if transition=="none" then
    --search for areas
    for coll in all(p_coll) do

      --door trigger
      if coll.tag=="door" then
        coll:trigger() --trigger door

        --take player control
        transition=coll.dir
        player.can_control=false
      end
    end
  else
    --transition player
    if not next(p_coll) then 
      --if player is no longer colliding
      --return player control
      --and change room settings to new room
      transition="none"
      player.can_control=true
      player.room={x=room_x,y=room_y}
      player.next_room={x=nil,y=nil}
    else
      if transition=="left" then
        player:move(-1,0)
      end
      if transition=="top" then
        player:move(0,-1)
      end
      if transition=="right" then
        player:move(1,0)
      end
      if transition=="bot" then
        player:move(0,1)
      end
    end
  end
end

-->8

--------------------------------

--draw

function _draw()
  --move camera and draw world space
  cls(0)
  camera(cam_x, cam_y)
  
  for obj in all(objs) do
    --draw objects in player's
    --current and next room
    if tables_equal(obj.room,player.room) then
     obj:draw()
    end
    if tables_equal(obj.room,player.next_room) then
     obj:draw()
    end
  end
  
  player:draw()

  map(0, 0, 0, 0, 128, 32)
  camera()
  

  --draw screen space
  local i=2
  print(transition, 2, i, 6) i+=7
  print('pl:('..player.x..', '
    ..player.y..')', 2, i, 6) i+=7
  print('rm:('..room_x..', '
       ..room_y..')', 2, i, 6) i+=7
  print('cm:('..cam_x..', '
       ..cam_y..')', 2, i, 6) i+=7
  print('cl:'..collision_checks
       ,2,i,6) i+=7
  print('dr:'..draw_calls
       ,2,i,6) i+=7
end
-->8

--------------------------------

--game object

staticbody = {}
kinebody = {}

game_obj = {
  x=25,
  y=25,
  room={x,y},
  size={x=4,y=4},
  c=a,
  tag="generic",
  noclip=true,
  room_constrain=false,
  bounds={},
  
  update_bounds = function(self)
    self.bounds["left"]=self.x
    self.bounds["top"]=self.y
    self.bounds["right"]=self.x+self.size.x
    self.bounds["bot"]=self.y+self.size.y
  end,

  
  init = function(self)
    --initialize position based on room
    if self.room.x and self.room.y then
      self:set_position(self.room.x*128+self.x,
                        self.room.y*128+self.y)
    end
    self:update_bounds()
  end,
  
  update = function(self)
    self:update_bounds()
    if room_constrain==true then
      self.x=constrain(self.x,0,128-self.size.x)
      self.y=constrain(self.y,0,128-self.size.y)
    end
  end,
  
  draw = function(self)
    draw_calls+=1
    rectfill(self.bounds["left"],
             self.bounds["top"],
             self.bounds["right"],
             self.bounds["bot"],
             self.c)
  end,

  trigger = function(self)
  end,

  move = function(self,x,y)
    self.x+=x
    self.y+=y
  end,

  can_move = function(self,x,y)

  end,
  
  set_position=function(self,_x,_y)
    self.x=_x
    self.y=_y
  end
}

--------------------------------

--staticbody

function init_staticbody()
  staticbody = copy(game_obj)
  staticbody.noclip=false
  staticbody.tag="staticbody"
  staticbody.c=5
end

function create_staticbody(_x,_y,_size_x,_size_y,_room_x,_room_y)
 local temp=copy(staticbody)
  temp.x=_x
  temp.y=_y
  temp.size.x=_size_x
  temp.size.y=_size_y
  temp.room.x=_room_x
  temp.room.y=_room_y
  temp:init()
  add(objs,temp)
end

--------------------------------

--kinematic body
function init_kinebody()
  kinebody = copy(game_obj)
  kinebody.noclip=false
  kinebody.tag="kinebody"
  kinebody.c=3

  --checks whether the kinematic body will collde
  function kinebody:can_move(_x,_y)
    local result=true;
    --x direction
    if will_obj_collide(self,_x,self.y)==true
    or will_obj_collide_room(self,_x,self.y)==true then
      result=false;
    end
    --y direction
    if will_obj_collide(self,self.x,_y)==true
    or will_obj_collide_room(self,self.x,_y)==true then
      result=false;
    end

    return result;
  end
end

function create_kinebody(_x,_y,_size_x,_size_y,_room_x,_room_y)
  local temp = copy(kinebody)
  temp.x=_x
  temp.y=_y
  temp.size.x=_size_x
  temp.size.y=_size_y
  temp.room.x=_room_x
  temp.room.y=_room_y
  temp:init()
  add(objs,temp)
end
-->8

--------------------------------

--player
function init_player()
  player = copy(game_obj)
  player:init()
  player.x=62
  player.y=62
  player.room={x=0,y=0}
  player.next_room={x=nil,y=nil}
  player.size={x=4,y=4}
  player.speed=1
  player.c=8

  player.noclip=false
  player.tag="player"
  player.room_constrain=true
  player.can_control=true
  
  function player:update()
    if self.can_control==true then
      self:movement()
    end
    self.update_bounds(self)
  end

  function player:movement()
   local move_vec = {x=0,y=0}

   if (btn(➡️)) then
     move_vec = {x=move_vec.x+self.speed,y=move_vec.y}
   end
   if (btn(⬅️)) then
     move_vec = {x=move_vec.x-self.speed,y=0}
   end
   if (btn(⬆️)) then
     move_vec = {x=move_vec.x,y=move_vec.y-self.speed}
   end
   if (btn(⬇️)) then
     move_vec = {x=move_vec.x,y=move_vec.y+self.speed}
   end

   --check if can move, and if so displace entities
   local _can_move_x = true
   local _can_move_y = true
   local new_position={}
   local predictions={}
   local room_collision=false

   --test and move player, x case
   if move_vec.x!=0 then
    _can_move_x=false
    new_position = {x=self.x+move_vec.x,y=self.y}
    predictions = predict_player_collisions(new_position.x,new_position.y)
    room_collision=will_player_collide_room(new_position.x,new_position.y)
    if room_collision==false then
     _can_move_x=true
     for obj in all(predictions) do
      --staticbodies prevent movement
      if obj.tag=="staticbody" then
       _can_move_x = false
      elseif obj.tag=="kinebody" then
       --kinematic body pushing
       if obj:can_move(obj.x+move_vec.x,obj.y)==true then
        obj:move(move_vec.x,0)
       else
        _can_move_x=false
       end
      end
     end
    end
   end

   --test and move player, y case
   if move_vec.y!=0 then
    --test and move player, with x and y as separate cases
    _can_move_y=false
    new_position = {x=self.x,y=self.y+move_vec.y}
    predictions = predict_player_collisions(new_position.x,new_position.y)
    room_collision=will_player_collide_room(new_position.x,new_position.y)
    if room_collision==false then
     _can_move_y=true
     for obj in all(predictions) do
      --staticbodies prevent movement
      if obj.tag=="staticbody" then
       _can_move_y = false
      elseif obj.tag=="kinebody" then
       if obj:can_move(obj.x,obj.y+move_vec.y)==true then
        obj:move(0,move_vec.y)
       else
        _can_move_y=false
       end
      end
     end
    end
   end

   --apply movement
   if _can_move_x==true then
    self:move(move_vec.x,0)
   end
   if _can_move_y==true then
    self:move(0,move_vec.y)
   end
  end
end
-->8

--------------------------------

--door
door_width = 16
door_depth = 2

half_door_width = flr(door_width/2)
half_door_depth = flr(door_depth/2)

door={}

function init_door()
  door = copy(game_obj)
  door.dir = nil

  function door:trigger()
    if self.dir=="left" then
      room_x-=1
    elseif self.dir=="top" then
      room_y-=1
    elseif self.dir=="right" then
      room_x+=1
    elseif self.dir=="bot" then
      room_y+=1
    end

    --add new room to player's collision checks
    player.next_room={x=room_x,y=room_y}
    
    --populate if not already
    if is_in_table(populated_rooms,{x=room_x,y=room_y})==false then
      spawn_doors(room_x,room_y)
    end
  end
end

--------------------------------

--door generation
function new_door(_dir,_room_x,_room_y)
  local temp=copy(door)
  --add tag and properties
  temp.tag="door"
  temp.c=6
  temp.dir=_dir

  --place doors based on direction
  if _dir=="left" then
    temp.x = 0
    temp.y = half_screen.y-half_door_width
    temp.size={x=door_depth,y=door_width}
  end
  if _dir=="top" then
    temp.x = half_screen.x-half_door_width
    temp.y = 0
    temp.size={x=door_width,y=door_depth}
  end
  if _dir=="right" then
    temp.x = screen_size.x-door_depth-1
    temp.y = half_screen.y-half_door_width
    temp.size={x=door_depth,y=door_width}
  end
  if _dir=="bot" then
    temp.x = half_screen.x-half_door_width
    temp.y = screen_size.y-door_depth-1
    temp.size={x=door_width,y=door_depth}
  end

  --adjust for room
  temp.room.x=_room_x
  temp.room.y=_room_y
  --add to obj table
  temp:init()

  add(objs,temp)
end

function spawn_doors(_room_x,_room_y)
  new_door("left",_room_x,_room_y)
  new_door("top",_room_x,_room_y)
  new_door("right",_room_x,_room_y)
  new_door("bot",_room_x,_room_y)
  for i=0,rnd(3)+3 do
    local s_x=flr(rnd(16))+4
    local s_y=flr(rnd(16))+4
    local _x=flr(rnd(128-s_x))
    local _y=flr(rnd(128-s_x))
    create_staticbody(_x,_y,s_x,s_y,_room_x,_room_y)
  end
  --add to table
  add(populated_rooms,{x=_room_x,y=_room_y})
end
-->8

--------------------------------

--collision functions

function will_obj_collide(obj,_x,_y)
 for other_obj in all(objs) do
   local colliding=false
   --check if same room
   if tables_equal(obj.room,other_obj.room) and obj!=other_obj then
    colliding=r_coll(_x,_y,
      _x+obj.size.x,_y+obj.size.y,
      other_obj.bounds["left"],
      other_obj.bounds["top"],
      other_obj.bounds["right"],
      other_obj.bounds["bot"])
   end
   if colliding==true then
     return true
   end
 end
 return false
end

function predict_collisions(obj,_x,_y,room)
  local collisions={}
  local room_to_check={}
  if obj.noclip==false then
   if room then room_to_check=room end --set room
   for other_obj in all(objs) do
    if not room then room_to_check=obj.room end --set room
    if tables_equal(room_to_check,other_obj.room) then
     local colliding=r_coll(_x,_y,
             _x+obj.size.x,_y+obj.size.y,
             other_obj.bounds["left"],
             other_obj.bounds["top"],
             other_obj.bounds["right"],
             other_obj.bounds["bot"])
     if colliding==true then
      add(collisions,other_obj)
     end
    end
   end
   return collisions
  else
   return {}
  end
end

function predict_player_collisions(_x,_y)
  local _coll={}
  _coll=concatenate_tables(_coll,predict_collisions(player,_x,_y))
  if player.next_room.x and player.next_room.y then
    _coll=concatenate_tables(_coll,predict_collisions(player,_x,_y,player.next_room))
  end
  return _coll
end

function get_player_collisions()
  return predict_player_collisions(player.x,player.y)
end

function will_obj_collide_room(obj,_x,_y)
 _x%=128
 _y%=128
 if  _x>=wall_thickness and _x<=127-obj.size.x-wall_thickness
 and _y>=wall_thickness and _y<=127-obj.size.y-wall_thickness then
   return false
 else
   return true
 end
end

function will_player_collide_room(_x,_y)
 return will_obj_collide_room(player,_x,_y)
end

function obj_r_coll(obj1,obj2)
  local colliding = 
    r_coll(obj1.bounds["left"],
           obj1.bounds["top"],
           obj1.bounds["right"],
           obj1.bounds["bot"],
           obj2.bounds["left"],
           obj2.bounds["top"],
           obj2.bounds["right"],
           obj2.bounds["bot"])
  return colliding
end

function p_r_coll(_x1,_y1,_x2,_y2)
  return r_coll(player.bounds["left"],
         player.bounds["top"],
         player.bounds["right"],
         player.bounds["bot"],
         _x1,_y1,_x2,_y2)
end

--all collision checks are built from this function
function r_coll(x1, y1, x2, y2,
               _x1,_y1,_x2,_y2)

  collision_checks+=1
  v_align=true
  h_align=true
  
  --vertical alignment
  if x2<_x1 or _x2<x1 then
    h_align=false
  end
  --horizontal alignment
  if y2<_y1 or _y2<y1 then
    v_align=false
  end
  
  if h_align==true and v_align==true then
    return true
  else
    return false
  end
end
-->8

--------------------------------

--general functions

--camera functions
start_speed=15
end_speed=1
function update_camera(x,y,tx,ty)
  if (x!=tx) then
    dist_norm = 1-((abs(x-tx))/rs)
    speed = flr(lerp(start_speed,end_speed,dist_norm))
    cam_x = step_towards(x,tx,speed)
  end
  if (y!=ty) then
    dist_norm = 1-((abs(y-ty))/rs)
    speed = flr(lerp(start_speed,end_speed,dist_norm))
    cam_y = step_towards(y,ty,speed)
  end
end

--flexible copy function
function copy(o)
  local c
  if type(o) == 'table' then
    c = {}
    for k, v in pairs(o) do
      c[k] = copy(v)
    end
  else
    c = o
  end
  return c
end

--interpolation functions
function lerp(a,b,t)
  return a + (b-a)*t
end

function step_towards(a,b,amt)
  if a<b then
    return min(a+amt,b)
  end
  if a>b then
    return max(a-amt,b)
  end
end

--table functions
function tables_equal(t1,t2)
  for key,value in 
      pairs(t1) do
    if t2[key]!=value then
      return false
    end
  end
  return true
end

function is_in_table(t,_var)
  for var in all(t) do
    if tables_equal(var,_var) then
      return true
    end
  end
  return false
end

function concatenate_tables(t1,t2)
    for i=1,#t2 do
        t1[#t1+1] = t2[i]
    end
    return t1
end

--math functions
function constrain(n,a,b)
  if a<b then
    return min(max(n,a),b)
  elseif b<a then
    return min(max(n,b),a)
  else
    return a
  end
end

__gfx__
00000000777777777777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10202020202020202020202020202040102020202020202020202020202020401020202020202020202020202020204000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11000000000000000000000000000041110000000000000000000000000000411100000000000000000000000000004100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
13232323232323232323232323232343132323232323232323232323232323431323232323232323232323232323234300000000000000000000000000000000
__map__
0102020202020202020202020202020401020202020202020202020202020204010202020202020202020202020202040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132323232323232323232323232323431323232323232323232323232323234313232323232323232323232323232340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102020202020202020202020202020401020202020202020202020202020204010202020202020202020202020202040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100000000000000000000000000001411000000000000000000000000000014110000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132323232323232323232323232323431323232323232323232323232323234313232323232323232323232323232340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
